// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/karmada-io/karmada/pkg/apis/quota/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KarmadaQuotaLister helps list KarmadaQuotas.
// All objects returned here must be treated as read-only.
type KarmadaQuotaLister interface {
	// List lists all KarmadaQuotas in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KarmadaQuota, err error)
	// KarmadaQuotas returns an object that can list and get KarmadaQuotas.
	KarmadaQuotas(namespace string) KarmadaQuotaNamespaceLister
	KarmadaQuotaListerExpansion
}

// karmadaQuotaLister implements the KarmadaQuotaLister interface.
type karmadaQuotaLister struct {
	indexer cache.Indexer
}

// NewKarmadaQuotaLister returns a new KarmadaQuotaLister.
func NewKarmadaQuotaLister(indexer cache.Indexer) KarmadaQuotaLister {
	return &karmadaQuotaLister{indexer: indexer}
}

// List lists all KarmadaQuotas in the indexer.
func (s *karmadaQuotaLister) List(selector labels.Selector) (ret []*v1alpha1.KarmadaQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KarmadaQuota))
	})
	return ret, err
}

// KarmadaQuotas returns an object that can list and get KarmadaQuotas.
func (s *karmadaQuotaLister) KarmadaQuotas(namespace string) KarmadaQuotaNamespaceLister {
	return karmadaQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KarmadaQuotaNamespaceLister helps list and get KarmadaQuotas.
// All objects returned here must be treated as read-only.
type KarmadaQuotaNamespaceLister interface {
	// List lists all KarmadaQuotas in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KarmadaQuota, err error)
	// Get retrieves the KarmadaQuota from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KarmadaQuota, error)
	KarmadaQuotaNamespaceListerExpansion
}

// karmadaQuotaNamespaceLister implements the KarmadaQuotaNamespaceLister
// interface.
type karmadaQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KarmadaQuotas in the indexer for a given namespace.
func (s karmadaQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KarmadaQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KarmadaQuota))
	})
	return ret, err
}

// Get retrieves the KarmadaQuota from the indexer for a given namespace and name.
func (s karmadaQuotaNamespaceLister) Get(name string) (*v1alpha1.KarmadaQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("karmadaquota"), name)
	}
	return obj.(*v1alpha1.KarmadaQuota), nil
}
